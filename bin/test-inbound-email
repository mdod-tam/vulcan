#!/bin/bash

echo "Running inbound email health check..."

# Get the current configuration from our Rails app
PROVIDER=$(bundle exec rails runner "print MatVulcan::InboundEmailConfig.provider")
INBOUND_ADDRESS=$(bundle exec rails runner "print MatVulcan::InboundEmailConfig.inbound_email_address")
POSTMARK_API_TOKEN=$(bundle exec rails runner "print Rails.application.credentials.dig(:postmark, :api_token) || ENV['POSTMARK_API_TOKEN']")

echo "Using provider: $PROVIDER"
echo "Testing inbound address: $INBOUND_ADDRESS"

# Function to send a test email via Postmark
send_postmark_test_email() {
  local subject="$1"
  local to_address="$2"
  
  echo "Sending test email to $to_address with subject: $subject"
  
  # Ensure we have an API token
  if [ -z "$POSTMARK_API_TOKEN" ]; then
    echo "Error: No Postmark API token found in credentials or environment variables."
    echo "Please set POSTMARK_API_TOKEN environment variable before running this test."
    exit 1
  fi
  
  # Use curl to send email through Postmark API
  curl -X POST \
    -H "Accept: application/json" \
    -H "Content-Type: application/json" \
    -H "X-Postmark-Server-Token: $POSTMARK_API_TOKEN" \
    "https://api.postmarkapp.com/email" \
    -d "{
      \"From\": \"test@example.com\", 
      \"To\": \"$to_address\", 
      \"Subject\": \"$subject\", 
      \"TextBody\": \"This is a test email to verify inbound processing.\",
      \"Attachments\": [
        {
          \"Name\": \"test.txt\",
          \"Content\": \"$(echo 'Test attachment' | base64)\",
          \"ContentType\": \"text/plain\"
        }
      ]
    }"
  
  echo ""
  echo "Email sent. Check logs to confirm processing in 30-60 seconds."
}

# Check which provider is configured and use the appropriate method
case "$PROVIDER" in
  postmark)
    send_postmark_test_email "Income Proof Test" "$INBOUND_ADDRESS"
    ;;
  # Add handlers for other providers as needed
  mailgun)
    echo "Mailgun test not implemented yet."
    # Would implement mailgun-specific email sending here
    ;;
  sendgrid)
    echo "SendGrid test not implemented yet."
    # Would implement sendgrid-specific email sending here
    ;;
  *)
    echo "Unknown or unsupported provider: $PROVIDER"
    echo "Please implement test support for this provider."
    exit 1
    ;;
esac

# Test with the generic proof email pattern (for backward compatibility)
if [ "$PROVIDER" = "postmark" ]; then
  send_postmark_test_email "Income Proof Test" "proof@example.com"
fi

echo "Health check complete. Verify in Rails logs that the emails were processed correctly."
echo "To check the logs, run: tail -f log/development.log"
echo "Look for successful processing of the inbound emails and any errors."
